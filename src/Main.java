import java.util.ArrayList;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {

        Player tim = new Player("Tim", 10, 15); //constructor with default sword weapon field
        System.out.println(tim); // overridden .toString automatically called from Player class
        saveObject(tim);

        tim.setWeapon("Stormbringer");
        saveObject(tim); // reprints all info, not just updated
//        loadObject(tim); results in redefining of all object fields
        System.out.println(tim);

        ISaveable werewolf = new Monster("Werewolf", 20, 40);
        System.out.println("werewolf strength = " + ((Monster) werewolf).getStrength()); //in order call the .getStrength method
//        // we need to tell java that, with yes, while werewolf is of the Isavable interface, it is of the Monster class, we cast it.
//        // declaring werewolf of class Monster actually not best practice since we aren't really doing anything different with
//        // Monster class, so best to implement werewolf as new ISaveable to keep things more generic unless needed?
//        // try to do this and the code breaks...?
        saveObject(werewolf);

    }

    public static ArrayList<String> readValues() {
        ArrayList<String> values = new ArrayList<String>();

        Scanner scanner = new Scanner(System.in);
        boolean quit = false;
        int index = 0;
        System.out.println("Choose\n" +
                "1 to enter a string\n" +
                "0 to quit");

        while (!quit) { //what this does it take scanner input to assign the field values for name, hitpoints, strength and weapon
            // so while it says input string, if i try to put non-numbers for hitpoints or strength, another part of the code will
            // break because it can't parse an int from the String in the .read instance method nested in the static loadObject method
            //if I input more than 4 string valus, those string values don't get assigned to anything, so this code has a lot of holes.
            // additionally, I can't choose the index for the string value I want to update. this is just for reassigning all fields
            // of an object over again ultiamtely thorugh the .read instance method which reassigns the fields
            System.out.print("Choose an option: ");
            int choice = scanner.nextInt();
            scanner.nextLine();
            switch (choice) {
                case 0:
                    quit = true;
                    break;
                case 1:
                    System.out.print("Enter a string: ");
                    String stringInput = scanner.nextLine();
                    values.add(index, stringInput);
                    index++;
                    break;
            }
        }
        return values;
    }

    public static void saveObject(ISaveable objectToSave) { //accepts any object that implements the Isaveable interface
        //which in this case includes both Player and Monster classes
        for(int i=0; i<objectToSave.write().size(); i++) { //termination defined as the size of the String ArrayList generated by .write
            System.out.println("Saving " + objectToSave.write().get(i) + " to storage device"); // calls instance method '.write'
            // to get ArrayList of Strings, then calls the value at each of the indexes and prints
        }
    }

    public static void loadObject(ISaveable objectToLoad) {
        ArrayList<String> values = readValues(); // calls readValues which just prompts me to input string values
        objectToLoad.read(values);
    }


}
